---
# Migrations.
# The purpose of migrations is to handle a case where we made a change
# to how we expect Tower to be configured, and upgrading Tower needs
# to move the Tower instance to the new state.
#
# Some migration tasks may be very simple, and others very complex; in order
# to maintain readability, *this* file should maintain a strict pattern
# of "condition, include, condition, include, condition, include...".
#
# Essentially, this file should set up a condition to check to see if a given
# migration needs to be done, and then include another task file that does
# it, regardless of whether the number of steps is 1 or 25.

- name: Check Tower version for supervisor configuration
  shell: cat /var/lib/awx/.tower_version
  changed_when: False
  ignore_errors: yes
  register: result

#
# -----------------------------------------------------------------------------
# Stop httpd in preparation of tower install
# -----------------------------------------------------------------------------
#
- name: Stop httpd if tower is installed
  service:
    name: '{{ migrations_httpd_init_name }}'
    state: stopped
    enabled: no
  when: result.rc == 0
  ignore_errors: True
  register: httpd_stop_new_name

- name: Stop httpd under its old name if needed
  service:
    name: 'httpd'
    state: stopped
    enabled: no
  when: result.rc == 0 and httpd_stop_new_name.failed|default(False)
  ignore_errors: True
  register: httpd_stop_old_name

#
# -----------------------------------------------------------------------------
# Disable httpd preparation of tower install and nginx replacement
# -----------------------------------------------------------------------------
#

- name: Stop and disable prior versions of httpd
  service:
    name: '{{ item }}'
    state: stopped
    enabled: no
  ignore_errors: True
  with_items: '{{ httpd_old_init_names | default([]) }}'
